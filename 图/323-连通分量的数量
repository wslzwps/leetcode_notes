题目:https://leetcode.cn/problems/number-of-connected-components-in-an-undirected-graph/description/

解题思路:
1: 将图转换成临接表
2: 编写dfs方法
3: 遍历所有顶点，对每个顶点执行dfs(v)，如果发现未访问的顶点，就是找到了一个新的连通分量。


代码示例(java):

public int countComponents(int n, int[][] edges) {
    int count = 0;
    List<List<Integer>> adjList = new ArrayList<>();
    boolean[] visited = new boolean[n];

    for (int i = 0; i < n; i++) adjList.add(new ArrayList<>());
    for (int[] edge : edges) {
        adjList.get(edge[0]).add(edge[1]);
        adjList.get(edge[1]).add(edge[0]);
    }
        
    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            count++;
            dfs(visited, i, adjList);
        }
    }
    return count;
}

private void dfs(boolean[] visited, int index, List<List<Integer>> adjList) {
    visited[index] = true;
    for (int i : adjList.get(index)) {
        if (!visited[i]) {
            dfs(visited, i, adjList);
        }
    }
}